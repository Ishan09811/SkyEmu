import java.util.regex.Pattern

apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            storePassword 'skyemu-super-secure-password'
            keyAlias 'skyemu-open-code-certificate'
            keyPassword 'skyemu-super-secure-password'
            storeFile file('../skyemu-open-signing-store')
        }
    }
    compileSdkVersion 33
    ndkVersion '22.1.7171670'

    defaultConfig {
        signingConfig signingConfigs.release
        applicationId = 'com.sky.SkyEmu'
        minSdkVersion 24
        targetSdkVersion 33
        versionCode getVersionCode()
        versionName getVersionName()
        setProperty("archivesBaseName", applicationId + "-v" + versionCode)
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=c++_static', '-DANDROID=1', '-DNDK_DEBUG=0', '-DCMAKE_BUILD_TYPE=RELWITHDEBINFO',"-DANDROID_ARM_NEON=TRUE"
            }
        }
        ndk {
            abiFilters "arm64-v8a", "x86", "armeabi-v7a", "x86_64"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            version '3.18.1'
            path '../../../CMakeLists.txt'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.browser:browser:1.5.0'
}

def getVersionName() {
    def tag = "1.0"
    try {
        def process = "git describe --tags --abbrev=0".execute()
        tag = process.in.text.trim()
        if (tag.startsWith("v")) {
            tag = tag.substring(1)
        }
    } catch (Exception e) {
        println "Failed to get latest Git tag: ${e.message}"
    }
    return tag
}

def getVersionCode() {
    def versionCode = 1
    def tag = getVersionName()
    if (tag && tag[0].isDigit()) {
        versionCode = tag[0].toString().toInteger()
    }
    if (versionCode == 0) {
        versionCode = 1 // return dummy version code if the version code isn't positive
    }
    return versionCode
}
